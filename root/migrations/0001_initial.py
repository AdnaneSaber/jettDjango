# Generated by Django 3.2.8 on 2022-01-23 10:11

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django_countries.fields
import jsonfield.fields
import root.models
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Animation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('AndroidAssetBundle', models.URLField(max_length=2048)),
                ('destination', jsonfield.fields.JSONField()),
                ('endTime', models.FloatField()),
                ('iOSAssetBundle', models.URLField(max_length=2048)),
                ('loopCount', models.PositiveIntegerField()),
                ('name', models.CharField(max_length=255)),
                ('startTime', models.FloatField()),
                ('trim', models.IntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(100)])),
                ('blend', models.CharField(choices=[('REACTION', 'Reaction'), ('BURPEE', 'Burpee')], max_length=9)),
                ('stitch', models.CharField(choices=[('REACTION', 'Reaction'), ('BURPEE', 'Burpee')], max_length=9)),
            ],
        ),
        migrations.CreateModel(
            name='Effect',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('effectType', models.CharField(choices=[('2D', '2D'), ('3D', '3D'), ('2D/3D', '2D/3D')], max_length=50)),
                ('prefabName', models.CharField(max_length=25)),
                ('iOSBundleUrl', models.URLField()),
                ('androidBundleUrl', models.URLField()),
                ('transform', jsonfield.fields.JSONField()),
                ('startTime', models.IntegerField()),
                ('endTime', models.IntegerField()),
                ('loop', models.BooleanField()),
                ('identifiableSurfaces', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Language',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Light',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('type', models.CharField(choices=[('POINT', 'Point'), ('AREA', 'Area'), ('SUN', 'Sun')], max_length=50)),
                ('range', models.IntegerField()),
                ('startTime', models.IntegerField()),
                ('endTime', models.IntegerField()),
                ('intensity', models.FloatField()),
                ('indirectMultiplier', models.IntegerField()),
                ('mode', models.CharField(choices=[('REALTIME', 'RealTime'), ('Delay', 'Delay')], max_length=50)),
                ('lightMapUrl', models.URLField(max_length=2048)),
                ('shadowType', models.CharField(choices=[('SOFT', 'SOFT'), ('NORMAL', 'NORMAL'), ('NONE', 'NONE')], max_length=50)),
                ('shadowStrength', models.IntegerField()),
                ('color', models.CharField(max_length=30)),
                ('exposure', models.CharField(max_length=30)),
                ('localPosition', jsonfield.fields.JSONField()),
                ('localRotation', jsonfield.fields.JSONField()),
            ],
        ),
        migrations.CreateModel(
            name='Movement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('startPointId', models.IntegerField()),
                ('duration', models.PositiveIntegerField()),
                ('loopCount', models.PositiveIntegerField()),
                ('pathType', models.CharField(max_length=255)),
                ('orientationType', models.CharField(choices=[('LookAhead', 'LookAhead'), ('lookAtTarget', 'lookAtTarget'), ('lookAtPosition', 'lookAtPosition')], max_length=50)),
                ('entityOrientation', jsonfield.fields.JSONField()),
                ('easeType', models.CharField(choices=[('OutFlash', 'OutFlash'), ('InFlash', 'InFlash')], max_length=50)),
                ('isSpeedBased', models.BooleanField()),
                ('lookAtValue', models.FloatField()),
                ('waypoints', jsonfield.fields.JSONField()),
            ],
        ),
        migrations.CreateModel(
            name='Sound',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('objectName', models.CharField(max_length=255)),
                ('audioType', models.CharField(choices=[('M4A', 'M4A'), ('MPEG', 'MPEG'), ('AAC', 'AAC'), ('WAV', 'WAV')], max_length=255)),
                ('audioUrl', models.URLField(max_length=2048)),
                ('loopCount', models.PositiveIntegerField()),
                ('volume', models.FloatField()),
                ('pitch', models.FloatField()),
                ('startTime', models.PositiveIntegerField()),
                ('endTime', models.PositiveIntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='TextToSpeech',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('country', django_countries.fields.CountryField(max_length=2)),
                ('endTime', models.FloatField()),
                ('gender', models.CharField(choices=[('MALE', 'Male'), ('FEMALE', 'Female')], max_length=50)),
                ('startTime', models.FloatField()),
                ('text', models.CharField(max_length=255)),
                ('type', models.CharField(choices=[('SPECIFIC', 'Specific'), ('NORMAL', 'Normal')], max_length=50)),
                ('voiceEffect', models.CharField(choices=[('NONE', 'None'), ('SHADY', 'Shady'), ('THIN', 'Thin')], max_length=50)),
                ('voiceName', models.CharField(max_length=255)),
                ('voiceVolume', models.PositiveIntegerField()),
                ('language', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='root.language')),
            ],
        ),
        migrations.CreateModel(
            name='Model',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('startTime', models.FloatField()),
                ('type', models.CharField(choices=[('CHARACTER', 'Character')], max_length=50)),
                ('objectDbHash', models.CharField(max_length=255)),
                ('AndroidAssetBundle', models.URLField()),
                ('endTime', models.FloatField()),
                ('iOSAssetBundle', models.URLField()),
                ('objectId', models.UUIDField(default=uuid.uuid4, editable=False)),
                ('layer', models.PositiveIntegerField()),
                ('name', models.CharField(blank=True, max_length=255)),
                ('origin', jsonfield.fields.JSONField()),
                ('animation', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='root.animation')),
                ('effect', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='root.effect')),
                ('light', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='root.light')),
                ('movement', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='root.movement')),
                ('sound', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='root.sound')),
                ('textToSpeech', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='root.texttospeech')),
            ],
        ),
        migrations.CreateModel(
            name='UserAccount',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(max_length=255, unique=True)),
                ('name', models.CharField(max_length=255)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('ppic', models.ImageField(default='storage/no_image.jpeg', upload_to=root.models.content_file_name_user)),
                ('cpic', models.ImageField(default='storage/no_image_cover.jpg', upload_to=root.models.content_file_name_user)),
                ('description', models.CharField(blank=True, max_length=100, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
